@model Application.Quizzes.Queries.GetQuiz.QuizDto;
@using Infrastructure.Identity
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager;


@{
    string approveReturnUrl = $"/quiz/{Model.Id}";
    string deleteReturnUrl = "~/";
}

<div class="quiz-container container">
    <div class="mt-3">
        @if (User?.IsInRole("Administrator") == true && !Model.Approved)
        {
            <form class="d-inline" method="post" asp-area="app" asp-controller="quiz" asp-action="approve" asp-route-id="@Model.Id" asp-route-returnurl="@approveReturnUrl">
                <button type="submit" class="btn btn-success mx-1 my-1"><i class="fas fa-check"></i></button>
            </form>
        }

        @if ((User?.IsInRole("Administrator") == true) || (Model.Author == User?.Identity.Name))
        {
            <form class="d-inline" method="post" asp-area="app" asp-controller="quiz" asp-action="delete" asp-route-id="@Model.Id"
              asp-route-returnurl="@deleteReturnUrl">
                <button type="submit" class="btn btn-danger mx-1 my-1"><i class="fas fa-trash-alt"></i></button>
            </form>

            <a asp-area="app" asp-controller="quiz" asp-action="upsert" asp-route-id="@Model.Id" type="submit" class="btn btn-info d-inline mx-1 my-1"><i class="fas fa-edit"></i></a>
        }
    </div>

    <div class="rating"></div>

    @await Html.PartialAsync("_QuizPartial", Model)
</div>


@section Scripts{
<script src="~/lib/rater.min.js"></script>
<script defer>
    //https://github.com/auxiliary/rater

    initializeRating();

    $(".rating").on("change", async function(ev, data){

        if(data.from === data.to)
            return;

        if('@_signInManager.IsSignedIn(User)' === 'False'){

            $(".rating").rate("setValue", 0);

            return alert('You have to be signed in to rate the quiz.');
        }


        await fetch(`/app/quiz/rate?id=@Model.Id&rateValue=${data.to}`, {
            method: 'POST'
        });
    });


    function initializeRating(){
        var options = {
            max_value: 5,
            step_size: 0.5,
            cursor: 'pointer',
            initial_value: @Model.UserRate
        }

        $(".rating").rate(options);
    }
</script>
}

