@using System.Security.Claims
@model Application.Quizzes.Queries.GetQuiz.QuizDto;

@{
    string approveReturnUrl = $"/quiz/{Model.Id}";
    string deleteReturnUrl = "~/";
}

<div class="quiz-container container">
    <div class="mt-3">
        @if (User?.IsInRole("Administrator") == true && !Model.Approved)
        {
            <form class="d-inline" method="post" asp-area="app" asp-controller="quiz" asp-action="approve" asp-route-id="@Model.Id" asp-route-returnurl="@approveReturnUrl">
                <button type="submit" class="btn btn-success mx-1 my-1"><i class="fas fa-check"></i></button>
            </form>
        }

        @if ((User?.IsInRole("Administrator") == true) || (Model.Author == User?.Identity.Name))
        {
            <form class="d-inline" method="post" asp-area="app" asp-controller="quiz" asp-action="delete" asp-route-id="@Model.Id"
              asp-route-returnurl="@deleteReturnUrl">
                <button type="submit" class="btn btn-danger mx-1 my-1"><i class="fas fa-trash-alt"></i></button>
            </form>

            <a asp-area="app" asp-controller="quiz" asp-action="upsert" asp-route-id="@Model.Id" type="submit" class="btn btn-info d-inline mx-1 my-1"><i class="fas fa-edit"></i></a>
        }
    </div>

    <div class="rating"></div>

    @await Html.PartialAsync("_QuizPartial", Model)
</div>


@section Scripts{
<script src="~/lib/rater.min.js"></script>
<script defer>
    var options = {
        max_value: 5,
        step_size: 0.5,
        cursor: 'pointer'
    }

    $(".rating").rate(options);


    $(".rating").on("change", async function(ev, data){
        //console.log(data.from, data.to);


        await fetch(`https://localhost:44381/app/quiz/rate?id=@Model.Id&rateValue=${data.to}`, {
            method: 'POST'
        });
    });

</script>
}

